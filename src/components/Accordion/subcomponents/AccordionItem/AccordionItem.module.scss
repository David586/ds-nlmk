@mixin padding($top-bottom, $left-right) {
  .header {
    padding: $top-bottom $left-right;
  }
}

@mixin contentColorHelper($bg, $cl, $icon) {
  background-color: $bg;
  color: $cl;

  path {
    fill: $icon;
  }
}

.expandable {
  display: grid;
  grid-template-rows: 0fr;
  transition: grid-template-rows 0.3s ease-out;
}

.expanded {
  grid-template-rows: 1fr;
}

.content-basic {
  overflow: hidden;
  padding: unset;
  transition: all 0.3s ease-in-out;
  transform-origin: left top;
  opacity: 0;
}

.content {
  opacity: var(--100-opacity);
}

.accordionItem {
  width: 100%;
  position: relative;

  .header {
    cursor: pointer;
    display: grid;
    grid-template-columns: var(--16-space) 1fr var(--16-space);
    gap: var(--16-space);
    align-items: center;
  }

  &.disabled {
    pointer-events: none;
  }

  &.default .header {
    @include contentColorHelper(
        var(--ac-accordion-default-default-bg-head),
        var(--ac-accordion-default-default-text),
        var(--ac-accordion-default-default-icon)
    );

    &.hovered {
      @include contentColorHelper(
          var(--ac-accordion-default-hover-bg-head),
          var(--ac-accordion-default-hover-heading),
          var(--ac-accordion-default-hover-icon)
      );
    }
    &.disabled {
      @include contentColorHelper(
          var(--ac-accordion-default-disabled-bg-head),
          var(--ac-accordion-default-disabled-heading),
          var(--ac-accordion-default-disabled-icon)
      );
    }
  }

  &.paper .header {
    @include contentColorHelper(
        var(--ac-accordion-paper-default-bg-head),
        var(--ac-accordion-paper-default-heading),
        var(--ac-accordion-paper-default-icon)
    );

    &.hovered {
      @include contentColorHelper(
          var(--ac-accordion-paper-hover-bg-head),
          var(--ac-accordion-paper-hover-heading),
          var(--ac-accordion-paper-hover-icon)
      );
    }

    &.disabled {
      @include contentColorHelper(
          var(--ac-accordion-paper-disabled-bg-head),
          var(--ac-accordion-default-disabled-heading),
          var(--ac-accordion-paper-disabled-icon)
      );
    }
  }

  &.m {
    @include padding(var(--16-space), var(--16-space));

    .content {
      padding: var(--8-space) var(--16-space) var(--16-space) var(--16-space);
    }
  }

  &.s {
    @include padding(var(--8-space), var(--16-space));
    .content {
      padding: var(--4-space) var(--16-space) var(--8-space) var(--16-space);
    }
  }

  &.xs {
    @include padding(var(--4-space), var(--16-space));
    .content {
      padding: var(--2-space) var(--16-space) var(--4-space) var(--16-space);
    }
  }
}

.icon-helper {
  height: var(--24-size);
  width: var(--24-size);
  display: flex;
  align-items: center;
  justify-content: center;

  svg {
    transition: 0.3s ease-out;
  }
}

.icon-plus {
  svg {
    transform: rotate(45deg);
  }
}

.icon-cross {
  svg {
    transform: rotate(0)
  }
}

.icon-down {
  svg {
    transform: rotate(0);
  }
}

.icon-up {
  svg {
    transform: rotate(180deg)
  }
}
