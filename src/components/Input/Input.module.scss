@mixin padding-mixin($pt, $pr, $pb, $pl) {
  padding: $pt $pr $pb $pl;
}

@mixin input-color-states {
  &.error {
    color: var(--error-red-500);
  }

  &.warning {
    color: var(--warning-orange-600);
  }

  &.success {
    color: var(--success-green-700);
  }
}

@mixin input-border-color-states {
  &.error {
    border-color: var(--error-red-500);
  }

  &.warning {
    border-color: var(--warning-orange-600);
  }

  &.success {
    border-color: var(--success-green-700);
  }
}

.input-wrapper {
  font-family: var(--font-families-pt-root-ui);
  position: relative;

  input:focus ~ label,
  textarea:focus ~ label,
  input:not(:placeholder-shown):not(:focus) ~ label,
  textarea:not(:placeholder-shown):not(:focus) ~ label {
    top: -6px;
    left: 12px;
    font-size: var(--body2-font-size);
    line-height: 11px;
    background: linear-gradient(to top, var(--default-second) 50%, transparent 50%);

    @include padding-mixin(var(--0-space), var(--4-space), var(--0-space), var(--4-space));
  }

  input:focus ~ label,
  textarea:focus ~ label {
    color: var(--primary-blue-600);

    @include input-color-states;
  }

  input:not(:placeholder-shown):not(:focus):disabled ~ label,
  textarea:not(:placeholder-shown):not(:focus):disabled ~ label {
    background: linear-gradient(to top, var(--text-grey-50) 50%, transparent 50%);
  }
}

.text-field {
  width: 100%;
  height: var(--40);
  color: var(--text-grey-900);
  box-sizing: border-box;
  font-family: inherit;
  font-size: var(--font-size-2);
  font-weight: var(--body2-medium-font-weight);
  border-radius: var(--4-radius);
  z-index: 2;
  border: 1px solid var(--text-grey-200);
  outline: none;
  background: var(--default-second);
  font-variant-numeric: tabular-nums lining-nums;

  @include padding-mixin(9px, var(--16-space), 9px, var(--16-space));
  @include input-border-color-states;

  &.input-with-icon {
    padding-right: 36px;
  }

  &.compact {
    height: var(--32-size);

    ~ label {
      @include padding-mixin(5px, var(--16-space), 5px, var(--16-space));
    }

    ~ .icon {
      height: var(--24-size);
    }
  }

  &.extra-compact {
    height: 28px;

    ~ label {
      @include padding-mixin(4px, var(--16-space), 4px, var(--16-space));
    }

    ~ .icon {
      height: var(--16-size);
      padding-top: 2px;
    }
  }

  &:hover {
    border-color: var(--dark-primary-navyblue-900);

    @include input-border-color-states;
  }

  &:disabled {
    border-color: var(--text-grey-200);
    background-color: var(--text-grey-50);
    -webkit-text-fill-color: var(--text-grey-500);
    color: var(--text-grey-500);
  }

  &:focus {
    border-color: var(--primary-blue-600);

    @include input-border-color-states;
  }
}

.textarea {
  min-height: var(--80-size);
  display: inline-block;
  overflow: auto;
  resize: none;

  &.resize {
    resize: both;
  }
}

.label {
  position: absolute;
  margin: 0;
  padding: 11px var(--16-space) 10px var(--16-space);
  top: 1px;
  left: 0;
  color: var(--text-grey-500);
  font-size: var(--font-size-2);
  font-weight: var(--font-weights-pt-root-ui-2);
  line-height: var(--line-heights-5);

  cursor: text;
  transition: 100ms ease-out;

  @include input-color-states;

  .typography {
    line-height: inherit;
    margin: 0;
  }
}

.icon {
  position: absolute;
  inset-inline-end: var(--4-space);
  inset-block-start: var(--4-space);
  height: var(--32-size);
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--primary-blue-600);
  cursor: pointer;
  background: var(--default-second);

  @include input-color-states;
}

.helper-text {
  display: flex;
  margin: 0;
  padding: var(--4-space) var(--16-space);
  color: var(--text-grey-500);

  @include input-color-states;
}

.disabled {
  color: var(--text-grey-500);
  background-color: var(--text-grey-50);
  cursor: default;
}
