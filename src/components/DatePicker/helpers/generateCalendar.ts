/**
 * Генерирует календарь для диапазона лет. Каждый год представляет собой массив месяцев,
 * каждый месяц представляет собой массив дней.
 * @param fromYear Начальный год диапазона.
 * @param toYear Конечный год диапазона. По умолчанию равен начальному году.
 * @return Объект, где ключ - это год, а значение - массив месяцев.
 */
export function getCalendar(
  fromYear: number,
  toYear: number = fromYear
): { [key: number]: string[][] } {
  const res: { [key: number]: string[][] } = {};
  for (let y = fromYear; y <= toYear; y++) {
    res[y] = getYearArray(y);
  }
  return res;
}

/**
 * Генерирует массив месяцев для заданного года. Каждый месяц представляет собой массив дней.
 * @param year Год, для которого генерируется массив.
 * @return Массив месяцев для заданного года.
 */
function getYearArray(year: number): string[][] {
  const res: string[][] = [];
  for (let month = 1; month <= 12; month++) {
    res.push(getMonthArray(year, month));
  }
  return res;
}

/**
 * Генерирует массив дней для заданного месяца и года.
 * @param year Год, для которого генерируется массив.
 * @param month Месяц, для которого генерируется массив.
 * @return Массив дней для заданного месяца.
 */
function getMonthArray(year: number, month: number): string[] {
  const numOfFirstDay = getNumOfFirstDay(year, month, true);
  const dayCountInMonth = getDayCountInMonth(year, month);

  return [
    ...new Array(numOfFirstDay).fill(''),
    ...Array.from({ length: dayCountInMonth }, (_, i) => (i + 1).toString())
  ];
}

/**
 * Возвращает количество дней в заданном месяце и году.
 * @param year Год, для которого считается количество дней.
 * @param month Месяц, для которого считается количество дней.
 * @return Количество дней в заданном месяце.
 */
function getDayCountInMonth(year: number, month: number) {
  return new Date(year, month, 0).getDate();
}

/**
 * Возвращает номер первого дня в заданном месяце и году.
 * @param year Год, для которого считается первый день.
 * @param month Месяц, для которого считается первый день.
 * @param isFirstDayMonday Флаг, указывающий на то, что первый день недели - понедельник.
 * @return Номер дня недели первого дня в месяце (0 - воскресенье, 1 - понедельник и т.д.).
 */
function getNumOfFirstDay(
  year: number,
  month: number,
  isFirstDayMonday: boolean
) {
  const day = new Date(year, month - 1).getDay();
  return isFirstDayMonday ? (day ? day - 1 : 6) : day;
}

/*
getCalendar(2020);
{
  '2020': [
    [
      '', '', 1,  2,  3,  4,  5,  6,  7,
      8,  9,  10, 11, 12, 13, 14, 15, 16,
      17, 18, 19, 20, 21, 22, 23, 24, 25,
      26, 27, 28, 29, 30, 31
    ],
    [
      '', '', '', '', '', 1,  2,  3,  4,
      5,  6,  7,  8,  9,  10, 11, 12, 13,
      14, 15, 16, 17, 18, 19, 20, 21, 22,
      23, 24, 25, 26, 27, 28, 29
    ],
    [
      '', '', '', '', '', '', 1,  2,  3,  4,
      5,  6,  7,  8,  9,  10, 11, 12, 13, 14,
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
      25, 26, 27, 28, 29, 30, 31
    ],
    [
      '', '', 1,  2,  3,  4,  5,  6,  7,
      8,  9,  10, 11, 12, 13, 14, 15, 16,
      17, 18, 19, 20, 21, 22, 23, 24, 25,
      26, 27, 28, 29, 30
    ],
    [
      '', '', '', '', 1,  2,  3,  4,  5,
      6,  7,  8,  9,  10, 11, 12, 13, 14,
      15, 16, 17, 18, 19, 20, 21, 22, 23,
      24, 25, 26, 27, 28, 29, 30, 31
    ],
    [
       1,  2,  3,  4,  5,  6,  7,  8,  9,
      10, 11, 12, 13, 14, 15, 16, 17, 18,
      19, 20, 21, 22, 23, 24, 25, 26, 27,
      28, 29, 30
    ],
    [
      '', '', 1,  2,  3,  4,  5,  6,  7,
      8,  9,  10, 11, 12, 13, 14, 15, 16,
      17, 18, 19, 20, 21, 22, 23, 24, 25,
      26, 27, 28, 29, 30, 31
    ],
    [
      '', '', '', '', '', 1,  2,  3,  4,
      5,  6,  7,  8,  9,  10, 11, 12, 13,
      14, 15, 16, 17, 18, 19, 20, 21, 22,
      23, 24, 25, 26, 27, 28, 29, 30, 31
    ],
    [
      '', 1,  2,  3,  4,  5,  6,  7,  8,
      9,  10, 11, 12, 13, 14, 15, 16, 17,
      18, 19, 20, 21, 22, 23, 24, 25, 26,
      27, 28, 29, 30
    ],
    [
      '', '', '', 1,  2,  3,  4,  5,  6,
      7,  8,  9,  10, 11, 12, 13, 14, 15,
      16, 17, 18, 19, 20, 21, 22, 23, 24,
      25, 26, 27, 28, 29, 30, 31
    ],
    [
      '', '', '', '', '', '', 1,  2,  3,
      4,  5,  6,  7,  8,  9,  10, 11, 12,
      13, 14, 15, 16, 17, 18, 19, 20, 21,
      22, 23, 24, 25, 26, 27, 28, 29, 30
    ],
    [
      '', 1,  2,  3,  4,  5,  6,  7,  8,
      9,  10, 11, 12, 13, 14, 15, 16, 17,
      18, 19, 20, 21, 22, 23, 24, 25, 26,
      27, 28, 29, 30, 31
    ]
  ]
}
*/
