@mixin buttonBase {
  display: flex;
  align-items: center;
  border: 0;
  outline: none;
  cursor: pointer;

  &:disabled {
    cursor: default;
    opacity: 0.5;
  }
}

@mixin iconButtonSize($size) {
  min-width: $size;
  padding: var(--0-space);
}

@mixin compactStyles($size, $padding) {
  height: $size;
  padding: $padding;
}

.button {
  @include buttonBase;
  height: var(--40-size);
  border-radius: var(--4-radius);
  padding: var(--8-space) var(--12-space);
}

.icon-button {
  @include buttonBase;
  @include iconButtonSize(var(--40-size));
}

.icon-button-compact {
  @include iconButtonSize(var(--32-size));
}

.icon-button-extra-compact {
  @include iconButtonSize(var(--28-size));
}

.compact {
  border-width: var(--1-border) !important;
  @include compactStyles(var(--32-size), var(--4-space) var(--4-space));
  svg {
    height: var(--24-size);
    width: var(--24-size);
  }
}

.extra-compact {
  border-width: var(--1-border) !important;
  @include compactStyles(var(--28-size), var(--4-space) var(--4-space));
  svg {
    height: var(--16-size);
    width: var(--16-size);
  }
}

.left-icon,
.right-icon {
  display: flex;
}

.left-icon {
  padding-right: var(--4-space);
}

.right-icon {
  padding-left: var(--4-space);
}

.compact-left-icon {
  padding-right: var(--2-space);
}

.compact-right-icon {
  padding-left: var(--2-space);
}

.icon {
  display: flex;
  margin: auto;
}

/* primary variant */

.primary {
  background-color: var(--ac-button-primary-solid-default-bg);
  color: var(--ac-button-primary-solid-default-text);

  &:not(:disabled) {
    &:hover {
      background: var(--ac-button-primary-solid-hover-bg);
      color: var(--ac-button-primary-solid-hover-text);
    }

    &:active {
      background: var(--ac-button-primary-solid-pressed-bg);
      color: var(--ac-button-primary-solid-pressed-text);
    }
  }

  path {
    fill: var(--ac-icon-white);
  }
}

/* secondary variant */

.secondary {
  background-color: var(--ac-button-secondary-solid-default-bg);
  color: var(--ac-button-secondary-solid-default-text);

  &:not(:disabled) {
    &:hover {
      background: var(--ac-button-secondary-solid-hover-bg);
      color: var(--ac-button-secondary-solid-hover-text);
    }

    &:active {
      background: var(--ac-button-secondary-solid-pressed-bg);
      color: var(--ac-button-secondary-solid-pressed-text);
    }
  }

  path {
    fill: var(--ac-icon-blue);
  }
}

/* grey variant */

.grey {
  background-color: var(--ac-button-grey-solid-default-bg);
  color: var(--ac-button-grey-solid-default-text);

  &:not(:disabled) {
    &:hover {
      background-color: var(--ac-button-grey-solid-hover-bg);
      color: var(--ac-button-grey-solid-hover-text);
    }

    &:active {
      background-color: var(--ac-button-grey-solid-pressed-bg);
      color: var(--ac-button-grey-solid-pressed-text);
    }
  }
}

/* outline variant */

.outline {
  background-color: transparent;
  border: var(--2-border) solid var(--ac-button-primary-outline-default-stroke);
  color: var(--ac-button-primary-outline-default-text);

  &:not(:disabled) {
    &:hover {
      background-color: var(--ac-button-primary-outline-hover-bg);
      border-color: var(--ac-button-primary-outline-hover-stroke);
      color: var(--ac-button-primary-outline-hover-text);
    }

    &:active {
      background-color: var(--ac-button-primary-outline-pressed-bg);
      border-color: var(--ac-button-primary-outline-pressed-stroke);
      color: var(--ac-button-primary-outline-pressed-text);
    }
  }

  path {
    fill: var(--ac-icon-blue);
  }
}

/* greyOutline variant */

.greyOutline {
  background-color: transparent;
  border: var(--2-border) solid var(--ac-button-grey-outline-default-stroke);
  color: var(--ac-button-grey-outline-default-text);

  &:not(:disabled) {
    &:hover {
      background-color: var(--ac-button-grey-outline-hover-bg);
      border-color: var(--ac-button-grey-outline-hover-stroke);
      color: var(--ac-button-grey-outline-hover-text);
    }

    &:active {
      background-color: var(--ac-button-grey-outline-pressed-bg);
      border-color: var(--ac-button-grey-outline-pressed-stroke);
      color: var(--ac-button-grey-outline-pressed-text);
    }
  }

  path {
    fill: var(--ac-icon-grey);
  }
}

/* text variant */

.text {
  background-color: transparent;
  color: var(--ac-button-primary-clear-default-text);

  &:not(:disabled) {
    &:hover {
      background-color: var(--ac-button-primary-clear-hover-bg);
      color: var(--ac-button-primary-clear-hover-text);
    }

    &:active {
      background-color: var(--ac-button-primary-clear-pressed-bg);
      color: var(--ac-button-primary-clear-pressed-text);
    }
  }

  path {
    fill: var(--ac-icon-blue);
  }
}

.text-height-m {
  height: var(--24-size);
  line-height: var(--24-size);
}
.text-height-s {
  height: var(--24-size);
  line-height: var(--24-size);
}
.text-height-xs {
  height: var(--16-size);
  line-height: var(--16-size);
}

.icon-big-wrapper {
  margin: unset;
}
